# YOLOv5 🚀 by Ultralytics, GPL-3.0 license
# Hyperparameters for medium-augmentation COCO training from scratch
# python train.py --batch 32 --cfg yolov5m6.yaml --weights '' --data coco.yaml --img 1280 --epochs 300
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials

lr0: 0.01  # 初始学习率 (SGD=1E-2, Adam=1E-3)
lrf: 0.1  # 最终的OneCycleLR学习率 (lr0 * lrf)
momentum: 0.937  # SGD momentum（动量）/Adam beta1
weight_decay: 0.0005  # optimizer weight decay 5e-4（优化器权重衰变）
warmup_epochs: 3.0  # warmup epochs (fractions ok)
warmup_momentum: 0.8  # warmup initial momentum
warmup_bias_lr: 0.1  # warmup initial bias lr
box: 0.05  # box loss gain
cls: 0.3  # cls loss gain
cls_pw: 1.0  # cls BCELoss positive_weight
obj: 0.7  # obj loss gain (scale with pixels)
obj_pw: 1.0  # obj BCELoss positive_weight
iou_t: 0.20  # IoU training threshold（训练集阈值）
anchor_t: 4.0  # anchor-multiple threshold（多锚框阈值）
# anchors: 3  # anchors per output layer (0 to ignore)
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
# -------亮度变换------------
hsv_h: 0.015  # image HSV-Hue augmentation（色相增强） (fraction)
hsv_s: 0.7  # image HSV-Saturation augmentation（色调增强） (fraction)
hsv_v: 0.4  # image HSV-Value augmentation（hsv值增强） (fraction)
# ------仿射变换-------------
degrees: 0.0  # image rotation（图像旋转） (+/- deg)
translate: 0.1  # image translation（图像平移） (+/- fraction)
scale: 0.9  # image scale (+/- gain) 图像缩放比例
shear: 0.0  # image shear (+/- deg) 图像裁剪仿射矩阵系数
flipud: 0.0  # image flip up-down（图像上下翻转） (probability)
fliplr: 0.5  # image flip left-right（图像左右翻转） (probability)
# -------------透视变换-----------
perspective: 0.0  # image perspective（图像透视） (+/- fraction), range 0-0.001

mosaic: 1.0  # image mosaic (probability) 图像镶嵌（概率）
mixup: 0.1  # image mixup (probability) 图像混淆（概率）
copy_paste: 0.1  # segment copy-paste (probability) 区段复制粘贴（概率）
